pipeline {
  agent any
  tools {
    maven 'M2_HOME'
        }
    stages {

      stage ('Checkout SCM'){
        steps {
            git credentialsId: '6c41fe6e-50f3-40dc-a50d-db497361d17d', url: 'http://192.168.0.221:8081/gitlab-instance-e4de7c04/cicd-demo.git'
              }
        }
    	  
	  stage ('Build')  {
	    steps {
                   sh "mvn clean install"
                   sh "mvn package"
              }
	  }
	  
      stage('copy artifacts') {
        steps {
              //sshPublisher(publishers: [sshPublisherDesc(configName: 'Docker', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/webapp/', remoteDirectorySDF: false, removePrefix: '', sourceFiles: 'create-container-image.yaml Dockerfile')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
              sshPublisher(publishers: [sshPublisherDesc(configName: 'Docker', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/webapp/', remoteDirectorySDF: false, removePrefix: 'target', sourceFiles: 'target/webapp.war')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
                
            }
              
      }
	  stage('Waiting for Approvals') {
        steps{
                    input('Test Completed ? Please provide  Approvals for Prod Release ?')
			  }
      } 
	  
	  stage('Deploy to container') {
        steps{
               sshPublisher(publishers: [sshPublisherDesc(configName: 'Docker', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: 'ansible-playbook create-container-image.yaml;', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/webapp/', remoteDirectorySDF: false, removePrefix: '', sourceFiles: 'create-container-image.yaml Dockerfile')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
			 }
      } 
	  
   }
}


