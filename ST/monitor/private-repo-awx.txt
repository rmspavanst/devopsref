Docker-Private-Registry
========================

1. Install openssl and edit the cnf file

   yum install openssl -y


  vi /etc/pki/tls/openssl.cnf

2. Add the following with your VM specific IP address under the section [ v3_ca ]

[ v3_ca ]
subjectAltName=IP:192.168.1.212


3. Create a local folder which will hold the certificates and that can be referenced by the Docker Registry server

	mkdir -p /certificates

	cd certificates

openssl req \
  -newkey rsa:4096 -nodes -sha256 -keyout domain.key \
  -x509 -days 365 -out domain.crt
  
4. Enter all required fields (it could be anything) but please enter your Server IP address when it prompts for -> Common Name (e.g. server FQDN or YOUR name)

Common Name (e.g. server FQDN or YOUR name) []: 192.168.1.212

5. Check if the certificates are created in the current directory (certificates)

	ls

	domain.crt
	domain.key


6. Launch Docker registry using version 2 and referencing the certificates folder for TLS


sudo docker run -d -p 5000:5000 --restart=always --name registry \
  -v /certificates:/certificates \
  -e REGISTRY_HTTP_TLS_CERTIFICATE=/certificates/domain.crt \
  -e REGISTRY_HTTP_TLS_KEY=/certificates/domain.key \
  registry:2
  
docker ps


7. Docker Server does not trust the self-signed certificate and our certificates need to be manually added to Docker Engine


	sudo mkdir -p /etc/docker/certs.d/192.168.1.212:5000

8. Please make sure to copy domain.crt as ca.crt (or rename later on) 

	sudo cp /certificates/domain.crt /etc/docker/certs.d/192.168.1.212:5000/ca.crt

	sudo ls /etc/docker/certs.d/IP_ADDRESS_OF_YOUR_VM:5000/	


9. reload docker daemon to use the ca.crt certificate

	sudo service docker reload

10. copy the ca.crt file into other instace to access private docker repository

	mkdir -p /etc/docker/certs.d/192.168.1.212:5000
	
	scp -r /etc/docker/certs.d/192.168.1.212:5000/ca.crt 192.168.1.90:/etc/docker/certs.d/192.168.1.212:5000/
	
	sudo service docker reload
	
11. Try to push the image to private registry server now!!

    docker images
	docker ps -a
	docker tag ansible/awx:17.1.0 192.168.1.212:5000/ansible/awx:17.1.0
	docker push 192.168.1.212:5000/ansible/awx:17.1.0
	
	docker tag postgres:12 192.168.1.212:5000/postgres:12
	docker push 192.168.1.212:5000/postgres:12
	
	docker tag redis 192.168.1.212:5000/redis
	docker push 192.168.1.212:5000/redis
	
	docker tag centos:8 192.168.1.212:5000/centos:8
	docker push 192.168.1.212:5000/centos:8
	
12. verify in registry server

    find / -name repositories
    ll /var/lib/docker/volumes/*******/_data/docker/registry/v2/repositories


13. pull the images form docker registry server
 	
	docker pull 192.168.1.212:5000/ansible/awx:17.1.0
	dockr images
	
***********************************************************************************************************************
***********************************************************************************************************************


Install AWX using Private registry server:
==========================================

1. pull the postgres:12 and redis:latest images from private registry
   
   docker pull 192.168.1.212:5000/postgres:12
   docker pull 192.168.1.212:5000/redis
   docker pull 192.168.1.212:5000/centos:8 (optional)
   

2. copy the awx.17.1.0 form local repository

	cd awx.17.1.0/installer

3. edit the invebtory file
   vi inventory
   dockerhub_base=192.168.1.212:5000/ansible
   docker_registry=192.168.1.212:5000
   
4. run the install file
   
   ansible-playbook -i inventory install.yml
