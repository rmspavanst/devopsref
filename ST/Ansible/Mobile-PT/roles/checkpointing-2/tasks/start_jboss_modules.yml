---
- block:
  #st stands for status
  #st_bank_script_path refers to the status of bank script path
  - stat:
      path: "{{ jboss_start_banking_script }}"
    register: st_bank_script_path

  - fail:
      msg: "{{ start_JBoss_module_act_no }}- Start banking script {{ jboss_start_banking_script }} doesn't exist"
    when: not st_bank_script_path.stat.exists

  #verify if the stop reporting script exist or not
  - stat:
      path: "{{ jboss_start_reporting_script }}"
    register: st_reporting_script_path

  - fail:
      msg: "{{ start_JBoss_module_act_no }}- Start reporting script {{ jboss_start_reporting_script }} doesn't exist"
    when: not st_reporting_script_path.stat.exists

  #verify if the stop admin script exist or not
  - stat:
      path: "{{ jboss_start_admin_script }}"
    register: st_admin_script_path

  - fail:
      msg: "{{ start_JBoss_module_act_no }}- Start banking script {{ jboss_start_admin_script }} doesn't exist"
    when: not st_admin_script_path.stat.exists


  - stat:
      path: "{{ jboss_start_reporting_instance }}"
    register: st_report_instance_path

  - fail:
      msg: "{{ start_JBoss_module_2_act_no }}- Start reporting instance {{ jboss_start_reporting_instance }} doesn't exist"
    when: not st_report_instance_path.stat.exists


  - name: "{{ start_JBoss_module_act_no }}- Starting banking module"
    shell:
      cmd: bash -l "{{ jboss_start_banking_script }}"
    ignore_errors: yes

  - name: "{{ start_JBoss_module_act_no }}- Starting reporting module"
    shell:
      cmd: bash -l "{{ jboss_start_reporting_script }}"
    ignore_errors: yes

  - name: "{{ start_JBoss_module_act_no }}- Starting  admin module"
    shell:
      cmd: bash -l "{{ jboss_start_admin_script }}"
    ignore_errors: yes

  - name: "{{ start_JBoss_module_2_act_no }}- Starting  reporting instance"
    shell:
      cmd: bash -l "{{ jboss_start_reporting_instance }}"
    ignore_errors: yes

  - pause:
      seconds: "{{ pause_duration }}"

  ## verify if the process have started.
  #Verify if the banking, admin and reporting processes are started, by retrieving the PIDs
  - name: "{{ start_JBoss_module_act_no }}- Check if banking module has started"
    shell: ps -ef | grep Banking
    ignore_errors: yes
    register: bank_module_status

  - name: "{{ start_JBoss_module_act_no }}- Check if reporting module has started"
    shell: ps -ef | grep Reporting
    ignore_errors: yes
    register: report_module_status

  - name: "{{ start_JBoss_module_act_no }}- Check if admin module has started"
    shell: ps -ef | grep Admin
    ignore_errors: yes
    register: admin_module_status

  - fail:
      msg: "{{ start_JBoss_module_act_no }}- Banking module has not started. Please check."
    when: not '"Server:Banking" in bank_module_status.stdout'

  - fail:
      msg: "{{ start_JBoss_module_act_no }}- Reporting module has not started. Please check."
    when: not '"Server:Reporting" in report_module_status.stdout'

  - fail:
      msg: "{{ start_JBoss_module_act_no }}- Admin module has not started. Please check."
    when: not '"Server:Admin" in admin_module_status.stdout'

  - debug:
      msg: "{{ start_JBoss_module_act_no }}- Banking, reporting and admin modules have successfully started."

  tags:
    - A13
    - A14
    - B15
    - B16
