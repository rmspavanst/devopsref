---
- block:
  #Verify if the springcloud is already stopped
  - name: "{{ stop_SC_act_no }}- Checking the status of spring cloud"
    shell: ps -ef | grep  AppzillonBanking
    ignore_errors: yes
    register: springCloud_status

  - set_fact:
      pid_2b_delete: "{{ item }}"
    with_items: "{{ springCloud_status.stdout_lines }}"
    when: item | regex_search("(.*)AppzillonBanking-ConfigServer(.*)$")
    ignore_errors: yes

  - set_fact:
      pid_2b_delete: "{{ pid_2b_delete.split()[1] }}"
    ignore_errors: yes

  - debug:
      msg: "{{ stop_SC_act_no }}- Spring cloud is already in stopped state"
    when: springCloud_status.stdout_lines|length <= 2

  - name: "{{ stop_SC_act_no }}- Stopping spring cloud"
    block:
      - name: "{{ stop_SC_act_no }}- Killing the process id {{ pid_2b_delete }}"
        shell:
          cmd: "kill -9 {{ pid_2b_delete }}"

      - name: "{{ stop_SC_act_no }}- Verifying the status of spring cloud"
        shell: ps -ef | grep  AppzillonBanking | awk -F' ' '{print $2}'
        ignore_errors: yes
        register: springCloud_status_verify

      - debug:
          var: springCloud_status_verify

      - fail:
          msg: "{{ stop_SC_act_no }}- Not able to kill spring cloud with process id {{ pid_2b_delete }}"
        when: pid_2b_delete in springCloud_status_verify.stdout

      - debug:
          msg: "{{ stop_SC_act_no }}- Spring cloud is successfully stopped."
    when: not springCloud_status.stdout_lines|length <= 2

  tags:
    - A4
    - B5
