---
- block:

    - include_tasks: "{{ role_path }}/../pre_activities/tasks/runBatchJob.yml"
      vars:
        batchFile: "{{DB_chk_replication_state_script}}"
        winBatFileRun: "B2"
        purpose: "check RBG replication status"
        search_strings:
          - 'Sync failures( *): 0'
          - 'Sync not route( *): 0'
          - 'Sync not deliver( *): 0'
      when: inventory_hostname in dr_db_ips
      tags: [B2]

    - include_tasks: "{{ role_path }}/../pre_activities/tasks/runBatchJob.yml"
      vars:
        batchFile: "{{stop_RBG_Glassfish}}"
        winBatFileRun: "B4"
        purpose: "stop RBG Glassfish Application via Failover Cluster Manager at Failover cluster manager"
        search_strings:
          - 'GlassfishAppServer DOMAIN1 Offline'
      when: inventory_hostname in dr_app_ips
      tags: [B4]

    - include_tasks: "{{ role_path }}/../pre_activities/tasks/runBatchJob.yml"
      vars:
        batchFile: "{{shut_RBG_Replicate_script}}"
        winBatFileRun: "B6"
        purpose: "shutdown RBG replication"
        search_strings:
          - 'Stop Replication : Success'
      when: inventory_hostname in dr_db_ips
      tags: [B6]

    - include_tasks: "{{ role_path }}/../pre_activities/tasks/disableScheduledTasks.yml"
      vars:
        DisableScheduler: "B7"
      when: inventory_hostname in dr_app_ips
      tags: [B7]

    - include_tasks: "{{ role_path }}/../pre_activities/tasks/runBatchJob.yml"
      vars:
        batchFile: "{{DB_start_sync_check_script}}"
        winBatFileRun: "B8"
        purpose: "start synchronization checking between PROD and DR"
        search_strings:
          - 'The database, {{DB_name_1}} was synchronised'
          - 'The database, {{DB_name_2}} was synchronised'
      when: inventory_hostname in db_ips
      tags: [B8]

    - include_tasks: "{{ role_path }}/../pre_activities/tasks/runBatchJob.yml"
      vars:
        batchFile: "{{DB_start_replication_script}}"
        winBatFileRun: "B9"
        purpose: "start replication between (PROD -> DR)"
        search_strings:
          - '"Replication DOMAIN1" had been started'
      when: inventory_hostname in db_ips
      tags: [B9]

    - include_tasks: "{{ role_path }}/../pre_activities/tasks/runBatchJob.yml"
      vars:
        batchFile: "{{DB_chk_replication_state_script}}"
        winBatFileRun: "B10"
        purpose: "check replication status (PROD -> DR)"
        search_strings:
          - 'Sync failures( *): 0'
          - 'Sync not route( *): 0'
          - 'Sync not deliver( *): 0'
      when: inventory_hostname in db_ips
      tags: [B10]

    - include_tasks: "{{ role_path }}/../pre_activities/tasks/runBatchJob.yml"
      vars:
        batchFile: "{{start_RBG_Glassfish}}"
        winBatFileRun: "B11"
        purpose: "start up RBG Glassfish Application via Services"
        search_strings:
          - 'GlassfishAppServer DOMAIN1 Online'
      when: inventory_hostname in app_ips
      tags: [B11]

    - include_tasks: "{{ role_path }}/../pre_activities/tasks/checkAppServDate.yml"
      when: inventory_hostname in app_ips
      tags: [B13a]

    - include_tasks: "{{ role_path }}/../pre_activities/tasks/runBatchJob.yml"
      vars:
        batchFile: "{{RBG_health_chk_script}}"
        winBatFileRun: "B13"
        purpose: "Perform server health check from FINEXUS task scheduler, for RBG - Confirm the presence of key-value"
        checkLogFile: yes
        srv_health_chk_log: "{{srv_health_chk_RBG_log}}"
        search_strings:
          - 'Applications Value Date : {{servDate}}'
          - 'Services Name : domain1( *)Status : RUNNING'
          - 'Services Name : DerbyDatabase( *)Status : RUNNING'
          - 'Connection Pools Name : Derby1( *)Status : CONNECTED'
          - 'Connection Pools Name : Derby2( *)Status : CONNECTED'
          - 'Connection Pools Name : Derbybhi( *)Status : CONNECTED'
          - 'Connection Pools Name : DerbyArchive( *)Status : CONNECTED'
          - 'Database Name : {{DB_name_1}} \(PRIMARY - SECONDARY\)( *)Status : RUNNING'
          - 'Database Name : {{DB_name_2}}( *)\(PRIMARY - SECONDARY\)( *)Status : RUNNING'
      when: inventory_hostname in app_ips
      tags: [B13.1a]

    - name: "Check DB {{DB_name_1}} Heartbeat in RBG Process"
      include_tasks: "{{ role_path }}/../pre_activities/tasks/checkDBHeartbeat.yml"
      vars:
        winBatFileRun: "B13 - {{DB_name_1}}"
        purpose: "DB {{DBName}} in RBG process - Capture DB String in HealthCheck log & Verify DB Heartbeat"
        DBName: "{{DB_name_1}}"
        srv_health_chk_log: "{{srv_health_chk_RBG_log}}"
        compareDBHeartbeat: true
        search_strings:
          - 'Database Name : {{DB_name_1}}([ \t]*)Primary( *): (\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)[.](\d+)([ \t\r\n]*)Secondary : (\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)[.](\d+)'
      when: inventory_hostname in app_ips
      tags: [B13.1b]
    
    - name: "Check DB {{DB_name_2}} Heartbeat in RBG Process"
      include_tasks: "{{ role_path }}/../pre_activities/tasks/checkDBHeartbeat.yml"
      vars:
        winBatFileRun: "B13 - {{DB_name_2}}"
        purpose: "DB {{DBName}} in RBG process - Capture DB String in HealthCheck log & Verify DB Heartbeat"
        DBName: "{{DB_name_2}}"
        srv_health_chk_log: "{{srv_health_chk_RBG_log}}"
        compareDBHeartbeat: true
        search_strings:
          - 'Database Name : {{DB_name_2}}([ \t]*)Primary( *): (\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)[.](\d+)([ \t\r\n]*)Secondary : (\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)[.](\d+)'
      when: inventory_hostname in app_ips
      tags: [B13.1c]

    - include_tasks: "{{ role_path }}/../pre_activities/tasks/runBatchJob.yml"
      vars:
        batchFile: "{{PaymenZ_health_chk_script}}"
        winBatFileRun: "B13"
        purpose: "Perform server health check from FINEXUS task scheduler, for PaymenZ - Confirm the presence of key-value"
        checkLogFile: yes
        srv_health_chk_log: "{{srv_health_chk_PaymenZ_log}}"
        search_strings:
          - 'Applications Value Date : {{servDatePYZ}}'
          - 'Service Name : Glassfish BHI([ \t]*)Status : RUNNING'
          - 'Service Name : OpenESB Server([ \t]*)Status : RUNNING'
          - 'Service Name : Message Queue Broker([ \t]*)Status : RUNNING'
          - 'Connection Pool Name : MSSQL1([ \t]*)Status : Connected'
          - 'Database Name : {{DB_name_3}}([ \t]*)Status : IN-PROGRESS'
          - 'Database Name : {{DB_name_4}}([ \t]*)Status : RUNNING'
          - 'BPEL Service Name : ATEComposite([ \t]*)v 1.0.14([ \t]*)Status : Started'
          - 'BPEL Service Name : AuditComposite([ \t]*)v 1.0.2([ \t]*)Status : Started'
          - 'BPEL Service Name : BI_CBSComposite([ \t]*)v 1.0.25([ \t]*)Status : Started'
          - 'BPEL Service Name : BI_ExchangeComposite([ \t]*)v 1.0.0([ \t]*)Status : Started'
          - 'BPEL Service Name : BI_SocketComposite([ \t]*)v 1.0.9([ \t]*)Status : Started'
          - 'BPEL Service Name : IFTSComposite([ \t]*)v 1.0.34([ \t]*)Status : Started'
          - 'BPEL Service Name : RBGComposite([ \t]*)v 1.0.5([ \t]*)Status : Started'
          - 'BPEL Service Name : ScreenComposite([ \t]*)v 1.0.15([ \t]*)Status : Started'
          - 'BPEL Service Name : SSDSComposite([ \t]*)v 1.0.31([ \t]*)Status : Started'
          - 'BPEL Service Name : STATComposite([ \t]*)v 1.0.30([ \t]*)Status : Started'
          - 'Application Name : BHI([ \t]*)v 1.0.13245([ \t]*)Status : ENABLED'
      when: inventory_hostname in app_ips
      tags: [B13.2a]
    
    - name: "Check DB {{DB_name_3}} Heartbeat in PaymentZ Process"
      include_tasks: "{{ role_path }}/../pre_activities/tasks/checkDBHeartbeat.yml"
      vars:
        winBatFileRun: "B13 - {{DB_name_3}}"
        purpose: "DB {{DBName}} in PaymentZ process - Capture DB String in HealthCheck log & Verify DB Heartbeat"
        DBName: "{{DB_name_3}}"
        srv_health_chk_log: "{{srv_health_chk_PaymenZ_log}}"
        compareDBHeartbeat: true
        search_strings:
          - 'Database Name : {{DB_name_3}}([ \t]*)Primary([ \t]*): (\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)([ \t\r\n]*)Secondary([ \t]*): (\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)'
      when: inventory_hostname in app_ips
      tags: [B13.2b]
    
    - name: "Check DB {{DB_name_4}} Heartbeat in PaymentZ Process"
      include_tasks: "{{ role_path }}/../pre_activities/tasks/checkDBHeartbeat.yml"
      vars:
        winBatFileRun: "B13 - {{DB_name_4}}"
        purpose: "DB {{DBName}} in PaymentZ process - Capture DB String in HealthCheck log & Verify DB Heartbeat"
        DBName: "{{DB_name_4}}"
        srv_health_chk_log: "{{srv_health_chk_PaymenZ_log}}"
        compareDBHeartbeat: true
        search_strings:
          - 'Database Name : {{DB_name_4}}([ \t]*)Primary([ \t]*): (\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)([ \t\r\n]*)Secondary([ \t]*): (\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)'
      when: inventory_hostname in app_ips
      tags: [B13.2c]

    - include_tasks: "{{ role_path }}/../pre_activities/tasks/runBatchJob.yml"
      vars:
        batchFile: "{{DB_start_sync_check_script}}"
        winBatFileRun: "B13c"
        purpose: "start synchronization checking between DR and PROD"
        search_strings:
          - 'The database, {{DB_name_1}} was synchronised'
          - 'The database, {{DB_name_2}} was synchronised'
      when: inventory_hostname in app_ips
      tags: [B13c]

    - include_tasks: "{{ role_path }}/../pre_activities/tasks/enableScheduledTasks.yml"
      vars:
        EnableScheduler: "B14"
      when: inventory_hostname in app_ips
      tags: [B14]


