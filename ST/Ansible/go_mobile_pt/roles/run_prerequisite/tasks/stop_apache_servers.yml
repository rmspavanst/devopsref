---
- debug:
    msg: "Bringing down apache servers"

- stat:
    path: "{{ apache_server_bin_path }}"
  register: apache_server_path

- fail:
    msg: "Apache server bin path {{ apache_server_bin_path }}  doesn't exist."
  when: not apache_server_path.stat.exists

- name: "ApacheServer: Checking the status of apache server"
  command: systemctl status httpd
  ignore_errors: yes
  changed_when: false
  register: service_apache_status

# Let's not do anything if the apache server is not running at all
- name: "ApacheServer: Skipping the restart as the server is already in stopped state."
  block:
    - debug:
        msg: "Apache server is not running. Skipping"

  when: service_apache_status | failed

# Stop the apache server , if the server is in runnign state

- name: "ApacheServer: Restarting the apache server."
  block:
    - name: "ApacheServer: Stopping the apache server."
      shell:
        chdir: '{{ apache_server_bin_path }}'
        cmd: apachectl stop
  when: service_apache_status

#again check the status of apache server and make sure the service is stopped or else fail the task
- name: "ApacheServer: Checking the status of apache server"
  command: systemctl status httpd
  ignore_errors: yes
  changed_when: false
  register: service_apache_status


- name: "ApacheServer: Reporting the  status of Apache. "
  fail:
    msg: |
      Service apache2 is still  running.
      Output of `systemctl status apache2`:
      {{ service_apache_status.stdout }}
      {{ service_apache_status.stderr }}
  when: service_apache_status

- debug:
    msg: "Apache servers is successfully stopped."