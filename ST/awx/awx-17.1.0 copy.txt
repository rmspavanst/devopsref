prerequisite:
-------------
1. Linux OS (RHEL or Centos)
2. 4GB RAM-More is better if available
3. 2 cpu cores
4. 20GB minimum disk space
5. A user with sudo privileges(mandatory)


Installation and Configuration AWX (Docker):
---------------------------------------------

Step 1./ Install required packages

01- First, we need to install the EPEL Repository as below:

$ dnf install epel-release -y

02- Second, we need to install some dpendencies packages like ansible:

$ dnf install git gcc gcc-c++ nodejs gettext device-mapper-persistent-data lvm2 bzip2 python3-pip 

 sudo dnf makecache

 sudo dnf install epel-release

 sudo dnf makecache

 sudo dnf install ansible

 ansible --version


Step 2./ Install Docker

01- To install Docker, first, we need to install the Docker repository, so use the following command:


 sudo yum remove docker \
                  docker-client \
                  docker-client-latest \
                  docker-common \
                  docker-latest \
                  docker-latest-logrotate \
                  docker-logrotate \
                  docker-engine

 sudo yum install -y yum-utils
 sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo

sudo yum-config-manager --enable docker-ce-nightly
sudo yum-config-manager --enable docker-ce-test
sudo yum-config-manager --disable docker-ce-nightly

sudo yum install docker-ce docker-ce-cli containerd.io


sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
docker-compose --version

$ alternatives --set python /usr/bin/python3

02- Next, use pip3 command to install the docker-compose tool:

$ pip3 install -U pip setuptools
$ pip3 install docker-compose
pip3 list




Step 4./ Install Ansible AWX

01- Now we can finally install Ansible AWX. Clone the "17.1.0" release with the command:

$ git clone -b "17.1.0" https://github.com/ansible/awx.git

02- Next, generate a secret encryption key with the command:

$ openssl rand -base64 30

copy the secret key

03- navigate to the awx/installer directory and locate the inventory file. We need to adjust a few parameters:

$ cd awx/installer/
$ vi inventory

Note: To persist the postgres data and the Ansible Awx, we already mounted partition to the directory /myawx

mkdir /var/lib/pgdocker

[all:vars]
dockerhub_base=ansible
awx_task_hostname=awx
postgres_data_dir="/var/lib/awx/pgdocker"
host_port=80
host_port_ssl=443
docker_compose_dir="/var/lib/awx/awxcompose"
pg_username=awx
pg_password=awxpass
pg_database=awx
pg_port=5432
pg_admin_password=password
rabbitmq_password=awxpass
rabbitmq_erlang_cookie=cookiemonster
admin_user=admin
admin_password=password
create_preload_data=True
secret_key=wnwsaB7Z1KbNWTFuedc8LF9+XFpOIHCA38QwqSto
awx_official=true
awx_alternate_dns_servers="8.8.8.8,8.8.4.4"
project_data_dir=/var/lib/awx/projects


04- So, to install Ansible AWX run the Ansible command:

$ ansible-playbook -i inventory install.yml

05- After the installation is done, you can check the containers created by the docker-compose as below:

$ docker ps
CONTAINER ID        IMAGE                     COMMAND                  CREATED             STATUS              PORTS                  NAMES
05e67f321693        ansible/awx_task:17.1.0   "tini -- /bin/sh -c …"   10 seconds ago      Up 7 seconds        8052/tcp               awx_task
26cbdca749ae        ansible/awx_web:17.1.0    "tini -- /bin/sh -c …"   12 seconds ago      Up 9 seconds        0.0.0.0:80->8052/tcp   awx_web
4140dad07ece        redis                     "docker-entrypoint.s…"   17 seconds ago      Up 11 seconds       6379/tcp               awx_redis
5ccd44ed6285        postgres:12               "docker-entrypoint.s…"   17 seconds ago      Up 12 seconds       5432/tcp               awx_postgres

06- In Case that the firewalld is enabled and running, then use the below commands to allow the http port (80) and https (443):


$ sudo firewall-cmd --permanent --zone=public --add-service=http
$ sudo firewall-cmd --permanent --zone=public --add-service=https
$ firewall-cmd --permanent --zone=public --add-port=80/tcp
$ sudo firewall-cmd --reload



07- If the Selinux enabled, use the below commands to Allow the Awx web server to access the network:

$ semanage port -a -t http_port_t -p tcp 8052
$ setsebool -P httpd_can_network_connect 1




Step 5:Accessing Ansible AWX Web GUI

01- To access AWX web console, open your browser and type in your AAnsible’s AWX server IP: http://awx-server-ip-address

how-to-install-ansible-awx-centos-8-web-gui

02- Finally, provide the username and password that been setup and you login to Ansible AWX dashboard:


Step 6: to configure external postgresDB

01- edit the credentials.py on awx_web container

docker exec -it awx_web vi /etc/tower/conf.d/credentials.py






yum list docker-ce --showduplicates | sort -r


sudo docker run hello-world

yum install py-pip python3-dev libffi-dev openssl-dev gcc libc-dev rust cargo make




