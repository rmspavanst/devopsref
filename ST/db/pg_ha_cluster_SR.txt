

Primary:
----------

sudo su - postgres

psql -c "ALTER SYSTEM SET listen_addresses = '*'";

psql

CREATE USER replicator WITH REPLICATION ENCRYPTED PASSWORD 'rep@123';

show config_file; #it will show the config location "/var/lib/pgsql/data/postgresql.conf"
\q 


cd /var/lib/pgsql/data/

vi pg_hba.conf
host replication replicator 10.0.16.135/22 trust or md5


systemctl restart postgresql



Standby:
----------
#Making a Base backup to bootstrap the standby server:

systemctl stop postgresql

cd $PGDATA

mkdir old_data

cp -rf data/ old_data/
rm -rf *


#user pg_basebackup tool to take backup

pg_basebackup -h 10.0.16.134 -U replicator -p 5432 -D /var/lib/pgsql/data -P -v -R -X stream -C -S pgstandby1


cd $PGDATA
ll

you can see standby.signal



Primary:
----------

psql -c "SELECT * FROM pg_replication_slots;"



Slave:
-------
cat postgresql.auto.conf
<can see primary conninfo>
ex:

# Do not edit this file manually!
# It will be overwritten by the ALTER SYSTEM command.
listen_addresses = '*'
primary_conninfo = 'user=replicator password=''rep@123'' channel_binding=prefer host=10.0.16.134 port=5432 sslmode=prefer sslcompression=0 ssl_min_protocol_version=TLSv1.2 gssencmode=prefer krbsrvname=postgres target_session_attrs=any'
primary_slot_name = 'pgstandby1'



systemctl start postgresql



#check replication status in both and primary and slave:

psql -x -c "select * from pg_stat_replication" (primary)

psql -c "\x" -c "SELECT * FROM pg_stat_wal_receiver;"(standby)





HA_PROXY Setup:
-----------------

yum install gcc pcre-devel tar make -y
yum install haproxy -y

user add -r haproxy

haproxy -v
systemctl start haproxy
systemctl enable haproxy
chmod a+rw haproxy.cfg



vi haproxy.cfg (read only)

global
    maxconn 100

defaults
    mode tcp
    log global
    retries                 3
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout check           10s


frontend ft_postgres
  bind *:5432
  default_backend bk_postgres
  
  
backend bk_postgres
  balance leastconn
  server mstar-db   192.168.0.1:5432 check
  server standby-db 192.168.0.2:5432 check
  
  
systemctl restart haproxy

# check port is open or not?

netstat -antp |egep 5432

vi haproxy.cfg (read write)

global
    maxconn 100

defaults
    mode tcp
    log global
    retries                 3
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout check           10s


frontend pgsql
  bind *:5432
  acl readonly.pgsql nbsrv(pgsql) eq 0
  use_backend readonly.pgsql if readonly.pgsql
  acl pgsql nbsrv(pgsql) gt 0
  use_backend pgsql if pgsql
  
backend pgsql
  mode tcp
  option tcp-check
  server master-db 10.0.16.210:5432 check
   
backend readonly.pgsql
  mode tcp
  option tcp-check
  server standby-db 10.0.16.211:5432 check


systemctl restart haproxy


# verify
#test1:
--------
psql -h haproxyip -p 5432 -U postgres -d postgres -c "select inet_server_addr()";


#test2:
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT NOW()
);

INSERT INTO users (username, email) VALUES ('john_doe', 'john.doe@example.com');
INSERT INTO users (username, email) VALUES ('jane_smith', 'jane.smith@example.com');


SELECT * FROM users;




Backup:
---------
mkdir -p /var/lib/pgsql/backup/
mkdir -p /var/lib/pgsql/masterbackup/
mkdir -p /root/incremental/backup/


vi postgresql.conf

wal_level = replica
archive_mode = on
archive_command = 'cp %p /var/lib/pgsql/backup/%f'

pg_basebackup -D /var/lib/pgsql/masterbackup/ -Ft -Xs -P -U postgres



vi backup.sh

#!/bin/bash
DATE=$(date +%Y%m%d)
ARCHIVE_DIR="/var/lib/pgsql/backup/"
BACKUP_DIR="/root/incremental/backup/"

# Create a new backup directory for the current date
mkdir -p $BACKUP_DIR/$DATE

# Copy the WAL segments to the backup directory
cp $ARCHIVE_DIR/* $BACKUP_DIR/$DATE

# Clean up older backup directories if necessary
find $BACKUP_DIR -type d -mtime +7 -exec rm -rf {} \;



crontab -e

0 2 * * * /path/to/backup.sh

 the script will be executed at 2:00 AM every day.


