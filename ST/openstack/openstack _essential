


#check your CentOS release
cat /etc/redhat-release
#populate your /etc/environment file with below locale settings
vi /etc/environment
LANG=en_US.utf-8
LC_ALL=en_US.utf-8
#if you are not familiar with vi editor; you can press "i" to start editing a file. Press
"esc" when you’re done editing, and then ":wq" to save file and quit vi editor.
#check the status of firewalld service. Stop and disable it if enabled
systemctl status firewalld
systemctl stop firewalld
systemctl disable firewalld
#check the status of NetworkManager service. Stop and disable it if enabled
systemctl status NetworkManager
systemctl stop NetworkManager
systemctl disable NetworkManager
#enable and start network service
systemctl enable network
systemctl start network
#replace "enp0s3" with your interface name and check it's current settings
cat /etc/sysconfig/network-scripts/ifcfg-enp0s3
#disable selinux from it's config file /etc/selinux/config
vi /etc/selinux/config
SELINUX=disabled
#reboot your system
reboot
#after the reboot check the status of selinux, it should be disabled
getenforce
#On CentOS install the latest release of openstack package
sudo yum install -y centos-release-openstack-train
sudo yum install yum-utils
sudo yum-config-manager --enable openstack-train
#this updates your current packages
sudo yum update -y
#install packstack installer
sudo yum install -y openstack-packstack
#to check the IP addresses on your machine
ip address show
#run the packstack installer with below parameters
packstack --allinone --provision-demo=n --os-neutron-ovs-bridge-mappings=extnet:br-ex --os-neutron-ml2-mechanism-drivers=openvswitch --os-neutron-l2-agent=openvswitch --os-neutron-ovs-bridge-interfaces=br-ex:enp0s3 --os-neutron-ml2-type-drivers=vxlan,flat --os-neutron-ml2-tenant-network-types=vxlan
#to check the IP addresses on your machine
ip address show

#make sure your ethernet interface settings look like this. If exists you should
remove the IP address from
the interface
vi /etc/sysconfig/network-scripts/ifcfg-enp0s3
TYPE=OVSPort
NAME=enp0s3
DEVICE=enp0s3
DEVICETYPE=ovs
OVS_BRIDGE=br-ex
ONBOOT=yes
BOOTPROTO=none

#make sure your external bridge settings look like below
vi /etc/sysconfig/network-scripts/ifcfg-br-ex
DEVICE=br-ex
NAME=br-ex
DEVICETYPE=ovs
TYPE=OVSBridge
OVSBOOTPROTO=“none”
IPADDR=<your_IP>
PREFIX=<your_prefix>
GATEWAY=<your_gateway_IP>
IPV4_FAILURE_FATAL=no
IPV6INIT=no
DNS1=<DNS_Server_IP>
ONBOOT=yes

#this command provides you the openstack admin privileges
source keystonerc_admin

#run this command to create your provider network for your instances so they can
# communicate with the outside world
neutron net-create external_network --provider:network_type flat --provider:physical_network extnet --router:external
#this command creates the subnet attached to your provider network. You should be doing the

#configuration according to the LAN that your linux machine is connected to
neutron subnet-create --name public_subnet --enable_dhcp=False
--allocation-pool start=<IP_pool_first_address>,end=<IP_pool_last_address>
--gateway=<linux_gateway_IP> external_network <your_network_in_CIDR>
#example:
neutron subnet-create --name public_subnet --enable_dhcp=False --allocationpool start=192.168.0.120,end=192.168.0.150 --gateway=192.168.0.1 external_network 192.168.0.0/24


cat keystonerc_admin

source keystonerc_admin


# to check server list
openstack server list

# check the crediantials using export cmd
export

# copy the crediantial for operator
cp keystonerc_admin operator1_rc

vi operator1_rc (change the admin username and password)

# create flavor
openstack flavor create --disk 1 --ram 768 --id 20 newflavor
 


#Keystone:
 ==========
 Common authentication system
 Central catalog of services and endpoints
 Supports LDAP, AD, MySQL
 Provides a token for subsequent auth. requests


#Keystone_concepts:
 ===================
 User/ Project/ Role(Globally scoped, Project scoped)/ Token/  Catalog/

# Keystone Architecture:
 ==========================
 keystone API------>polices
                    tokens
                    catalog
                    identity
                    assignment
                    credentials

# Managing keystone from CLI:
==============================
cat keystonerc_admin
source keystonerc_admin

openstack endpoint list
openstack endpoint show <ID>

openstack catalog list
# ceilometer      metering
# swift           object-store
# nova            compute
# placement       placement
# cinderv2        volumev2
# glance          image
# keystone        identity
# gnocchi         metric
# neutron         network
# aodh            alarming
# cinder          volume
# cinderv3        volumev3

openstack project create <project_name>
openstack project show <project_name>
openstack project set --description "for testing purpose" <project_name>

openstack user create --project <project_name> --password-prompt <username>

openstack role list

openstack role add --project <project_name> --user <user_name> admin
openstack role add --project <project_name> --user <user_name> _member_

# to show all openstack command list
openstack command list
openstack command list | grep openstack.identity -A 40


## Glance:
===========
    Stores cloud images and snapshots
    Restful API
    Swift or other object storage backend


 #Images Types:
   RAW
   Machine (kernel/ramdisk outside of images, also known as AMI)
   VHD (Hyper-V)
   VDI (VirtualBox)
   Qcow2 (Qemu/KVM)
   VMDK (VMware)
   OVF (VMware, others)

  https://docs.openstack.org/image-guide/obtain-images.html
 
 # Manage Glance from CLI
 openstack command list | grep openstack.image -A 30

 openstack image list
 openstack image create --min-disk 2 --private --disk-format qcow2 --file <image_file> <image_name>

 openstack image show cirros


## Neutron:
==============

Network connectivity as a service
Ntwork, subnet and port abstractions
Plugins support many technologies
Modular Architecture
Central or distributed deployment

#Benefits of Neutron:
 Rich topologies
 Technology agnostic
 Puggable open Architecture
 Enables advaced services
    Load balancing, VPN, firewalld


ex: neutron:   net1(10.0.0.0/24) --> Virtual subnet
                                 --> L2 virtual network
                                 --> virtual port
                                    --> instance1 (10.0.0.11) --> virtual interface(VIF) --> VM
                                    --> instance2 (10.0.0.12)

                            










